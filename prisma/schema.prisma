// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewGeatures = ["jsonProtocol"]
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL") // uses connection pooling
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String          @id @default(cuid())
  username      String          @unique
  email         String          @unique
  emailVerified DateTime?       @map("email_verified")
  firstName     String
  lastName      String
  password      String
  isAdmin       Boolean         @default(false)
  role          String?         @default("user")
  isVerified    Boolean         @default(false)
  createdAt     DateTime        @default(now()) @map("created_at")
  updatedAt     DateTime        @updatedAt @map("updated_at")
  sessions      Session[]
  ActivateToken ActivateToken[]

  @@map("users")
}

model ActivateToken {
  id          String    @id @default(cuid())
  token       String    @unique
  createdAt   DateTime  @default(now())
  activatedAt DateTime?

  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model GameCategory {
  id          String        @id @default(cuid())
  game        String        @unique
  platforms   String[]
  tournaments Tournaments[]
}

model Rules {
  id            String       @id @default(cuid())
  input         Json

  Tournaments   Tournaments? @relation(fields: [tournamentsId], references: [id])
  tournamentsId String?
}

model Tournaments {
  id              String        @id @default(cuid())
  name            String
  game            String
  tournament_type String
  platforms       String[]
  entry           String
  team_size       String
  max_teams       Int
  enrolled        Int
  start_time      String

  infoId          Rules[]
  GameCategory    GameCategory? @relation(fields: [gameCategoryId], references: [id])
  gameCategoryId  String?
}
